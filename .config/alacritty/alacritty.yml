
# example configuration:
#    https://github.com/alacritty/alacritty/blob/master/alacritty.yml

env:
  # TERM env customization.
  # If this property is not set, alacritty will set it to this.
  # Otherwise it would be set to 'alacritty' which is fine but for ssh
  # to hosts where it is not installed and for some yet unknown reason
  # TERM=alacritty inside vim does not work well (can also set term inside vim)
  # Note that some xterm terminfo databases don't declare support for italics.
  # You can verify this by checking for the presence of `smso` and `sitm` in
  # `infocmp xterm-256color`.
  # NOTE: inside of tmux TERM is set to tmux/screen-256color ...
  TERM: alacritty
  # TERM: xterm-256color

dpi:
    x: 120.0
    y: 120.0

key_bindings:
  # special -------
  - { key: Back,      mods: Shift,           chars: "\x1e\x08"        }
  - { key: Space,     mods: Shift,           chars: "\x1e\x20"        }
  - { key: Back,      mods: Control,         chars: "\x1e\x7f"        }
    #- { key: Back,      mods: Shift,           chars: "\x7f"            }

  - { key: Back,      mods: Control|Shift,   chars: "\x1f\x7f"        }
  - { key: Space,     mods: Control|Shift,   chars: "\x1f\x20"        }
    # make these the same as C-S-Back/Space for now ...
  - { key: Back,      mods: Alt|Shift,       action: None             }
  - { key: Back,      mods: Alt,             action: None             }
    # these can launch window menu, disable
  - { key: Space,     mods: Alt|Shift,       action: None             }
  - { key: Space,     mods: Alt,             action: None             }

  - { key: Back,      mods: Alt|Control,     chars: "\x1b\x40"        }
    # are these really needed ?
  - { key: Equals,    mods: Alt|Control,     chars: "\x1b\x23"        }
  - { key: Space,     mods: Alt|Control,     chars: "\x1b\x23"        }

  - { key: Back,      mods: Super,           chars: "\x1b\x40"        }
  - { key: Equals,    mods: Super,           chars: "\x1b\x23"        }
  - { key: Space,     mods: Super,           chars: "\x1b\x23"        }

    # key 43 is Backslash ...
    # - { key: 43,        mods: Alt|Control,     action: None             }
    # - { key: 43,        mods: Alt|Control,     action: ToggleViMode     }
    # send ctrl-s + ] (\x13\x5d) tmux copy-mode
    # - { key: 43,        mods: Alt|Control,     chars: "\x13\x5d"        }
  - { key: Return,    mods: Super,           chars: "\x13\x5d"        }

    # key 26 is Bracketleft ...
  - { key: 26,        mods: Control|Shift,   chars: "\x1f\x5b"        }
  - { key: 26,        mods: Alt|Control,     action: None             }

    # key 27 is Bracketright ...
    # - { key: 27,        mods: Alt|Control,     action: None             }
  - { key: 27,        mods: Control|Shift,   chars: "\x1f\x5d"        }

  - { key: 43,        mods: Control|Shift,   chars: "\x1f\x5c"        }

    # key 53 is Slash ...
  - { key: 53,        mods: Control|Shift,   chars: "\x1f\x2f"        }

  - { key: Key0,      mods: Control,         chars: "\x30"            }
  - { key: Equals,    mods: Control,         chars: "\x3d"            }
  - { key: Minus,     mods: Control,         chars: "\x1e\x2d"        }
  - { key: Minus,     mods: Alt|Control,     action: None             }

  - { key: Return,    mods: Alt|Control,     chars: "\x1e\x0d"        }

    #- { key: X,         mods: Control|Shift,   chars: "\x1f\x58"        }

  - { key: J,         mods: Control|Shift,   chars: "\x1f\x4a"        }
  - { key: K,         mods: Control|Shift,   chars: "\x1f\x4b"        }

  - { key: G,         mods: Control|Shift,   chars: "\x1f\x47"        }
  - { key: N,         mods: Control|Shift,   chars: "\x1f\x4e"        }
  - { key: P,         mods: Control|Shift,   chars: "\x1f\x50"        }
  # special -------

    # these were alacritty search forward/backward -
  - { key: F,         mods: Control|Shift,   chars: "\x06"        }
  - { key: B,         mods: Control|Shift,   chars: "\x02"        }

  # same esc-seq as S-Insert (really cannot be RecieveChar)
  # make C-S-v same as std S-Insert esc code as C-S-<letter> cannot usually discern the Shift ...

  - { key: V,         mods: Control|Shift,   chars: "\x1b[2;2~"       }
  # same esc-seq as C-Insert (really cannot be RecieveChar)
  - { key: C,         mods: Control|Shift,   chars: "\x1b[2;5~"       }

  - { key: V,         mods: Alt|Control,     action: Paste            }
  - { key: C,         mods: Alt|Control,     action: Copy             }
    #- { key: V,         mods: Control|Super,   action: Paste            }
    #- { key: C,         mods: Control|Super,   action: Copy             }

    # CSI (Control Sequence Introducer) is \x1b[ or \x9b ...
    # tmux can send this to vi and Tab to everything else
  - { key: I,         mods: Control,         chars: "\x1e\x09"        }
    # - { key: Tab,                              chars: "\x09"            }

    # key 11 is zero ...
  - { key: 11,        mods: Control|Shift,   action: ResetFontSize    }
    # key 12 is minus ...
  - { key: 12,        mods: Control|Shift,   action: DecreaseFontSize }
    # key 13 is plus ...
  - { key: 13,        mods: Control|Shift,   action: IncreaseFontSize }

  # NOTE: Home (khome) can be: ^[[H or ^[[1~ or ^[[7~
  # NOTE: End  (kend)  can be: ^[[F or ^[[4~ or ^[[8~

  - { key: Home,      mods: Control,         chars: "\x1b[1;5H"       }
  - { key: End,       mods: Control,         chars: "\x1b[1;5F"       }
  - { key: Home,      mods: Alt,             chars: "\x1b[1;3H"       }
  - { key: End,       mods: Alt,             chars: "\x1b[1;3F"       }

  - { key: Up,        mods: Control,         chars: "\x1b[1;5A"       }
  - { key: Down,      mods: Control,         chars: "\x1b[1;5B"       }
  - { key: Left,      mods: Control,         chars: "\x1b[1;5D"       }
  - { key: Right,     mods: Control,         chars: "\x1b[1;5C"       }

  - { key: Up,        mods: Shift,           chars: "\x1b[1;2A"       }
  - { key: Down,      mods: Shift,           chars: "\x1b[1;2B"       }
  - { key: Left,      mods: Shift,           chars: "\x1b[1;2D"       }
  - { key: Right,     mods: Shift,           chars: "\x1b[1;2C"       }

  - { key: Up,        mods: Control|Shift,   chars: "\x1b[1;6A"       }
  - { key: Down,      mods: Control|Shift,   chars: "\x1b[1;6B"       }
  - { key: Left,      mods: Control|Shift,   chars: "\x1b[1;6D"       }
  - { key: Right,     mods: Control|Shift,   chars: "\x1b[1;6C"       }

  - { key: Up,        mods: Alt,             chars: "\x1b[1;3A"       }
  - { key: Down,      mods: Alt,             chars: "\x1b[1;3B"       }
  - { key: Left,      mods: Alt,             chars: "\x1b[1;3D"       }
  - { key: Right,     mods: Alt,             chars: "\x1b[1;3C"       }

  - { key: Up,        mods: Alt|Shift,       chars: "\x1b[1;4A"       }
  - { key: Down,      mods: Alt|Shift,       chars: "\x1b[1;4B"       }
  - { key: Left,      mods: Alt|Shift,       chars: "\x1b[1;4D"       }
  - { key: Right,     mods: Alt|Shift,       chars: "\x1b[1;4C"       }

  - { key: Up,        mods: Alt|Control,     chars: "\x1b[1;7A"       }
  - { key: Down,      mods: Alt|Control,     chars: "\x1b[1;7B"       }
  - { key: Left,      mods: Alt|Control,     chars: "\x1b[1;7D"       }
  - { key: Right,     mods: Alt|Control,     chars: "\x1b[1;7C"       }

  - { key: PageUp,    mods: Control,         chars: "\x1b[5;5~"       }
  - { key: PageUp,    mods: Control|Shift,   chars: "\x1b[5;6~"       }
  - { key: PageUp,    mods: Alt,             chars: "\x1b[5;3~"       }
  - { key: PageUp,    mods: Alt|Control,     chars: "\x1b[5;7~"       }

  - { key: PageDown,  mods: Control,         chars: "\x1b[6;5~"       }
  - { key: PageDown,  mods: Control|Shift,   chars: "\x1b[6;6~"       }
  - { key: PageDown,  mods: Alt,             chars: "\x1b[6;3~"       }
  - { key: PageDown,  mods: Alt|Control,     chars: "\x1b[6;7~"       }

  - { key: Insert,    mods: Control,         chars: "\x1b[2;5~"       }
  - { key: Insert,    mods: Shift,           chars: "\x1b[2;2~"       }
  - { key: Insert,    mods: Control|Shift,   chars: "\x1b[2;6~"       }

    # - { key: Insert,    mods: Alt,             chars: "\x1b[2;3~"       }
    # \x1b[2;3~ in tmux would also copyq toggle ...
  - { key: Insert,    mods: Alt,             command: { program: "copyq", args: ["toggle"] } }
  - { key: Insert,    mods: Super,           command: { program: "copyq", args: ["toggle"] } }
  - { key: V,         mods: Super,           command: { program: "copyq", args: ["toggle"] } }

  - { key: Insert,    mods: Alt|Shift,       chars: "\x1b[2;4~"       }
  - { key: Insert,    mods: Alt|Control,     chars: "\x1b[2;7~"       }

  - { key: Delete,    mods: Control,         chars: "\x1b[3;5~"       }
  - { key: Delete,    mods: Shift,           chars: "\x1b[3;2~"       }
  - { key: Delete,    mods: Control|Shift,   chars: "\x1b[3;6~"       }
  - { key: Delete,    mods: Alt,             chars: "\x1b[3;3~"       }
  - { key: Delete,    mods: Alt|Shift,       chars: "\x1b[3;4~"       }
  - { key: Delete,    mods: Alt|Control,     chars: "\x1b[3;7~"       }
    # key: Delete Alt|Control is usually eaten by winmgr ...

mouse_bindings:
    - { mouse: Middle, action: None }
    - { mouse: Middle, mods: Alt, action: None }
    - { mouse: Middle, mods: Shift, action: None }
    - { mouse: Middle, mods: Control, action: None }
    - { mouse: Middle, mods: Control|Shift, action: None }
      # NOTE: strange pasting bug sometimes (#5050)
    - { mouse: Middle, mods: Alt|Shift, action: None }
      #- { mouse: Middle, mods: Alt|Shift, action: PasteSelection }
      # NOTE: these below do not work to disable Alt|Shift Left or Right
      #- { mouse: Left,   mods: Alt|Shift, action: None }
      #- { mouse: Right,  mods: Alt|Shift, action: None }

mouse:
  # double_click: { threshold: 250 }
  # triple_click: { threshold: 500 }
  hide_when_typing: false

  hints:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    launcher: xdg-open

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    #modifiers: Control|Shift
    # NOTE: using Control seems to interfere with tmux ...
    modifiers: Shift

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to both the primary and
  # the selection clipboard. Otherwise, it will only be copied to the selection
  # clipboard.
  save_to_clipboard: false

# INFO: to prevent inconsistent DPR, set it explcitly ...
#   WINIT_HIDPI_FACTOR=1.22 alacritty

font:
  normal:
    family: Liberation Mono

    style: normal

  # use size 16.5 for wayland and 13.0 for x11 (WAYLAND_DISPLAY= alacritty -e term_win_loc start)
  size: 16.2
    # size: 13.0

  offset:
    x: 0
    y: 0

  bold:
    family: Liberation Mono

    style: normal

window:
  dimensions:
    # use 0,0 for winmgr to decide, but otherwise both must be >= 2
    columns: 194
    lines: 53
    # columns: 3
    # lines: 3

  position:
    # use 0,0 for winmgr to decide
    # x: 690
    # y: 678
    x: 0
    y: 0

  padding:
    x: 4
    y: 4

  dynamic_padding: false

  # use alt+space for window menu to move, resize etc.
  # (foreground color csd titlebar can be distracting)
  decorations: full

  decorations_theme_variant: Dark

  startup_mode: Windowed

  resize_increments: false

  title: Alacritty

  # Window class (Linux/BSD only):
  class:
    # Application instance name
    instance: Alacritty
    # General application class
    general: Alacritty

  # Allow terminal applications to change Alacritty's window title.
  dynamic_title: true

  opacity: 0.97

scrolling: 
  history: 0

custom_cursor_colors: true

colors:
  primary:
    # gray -
    #background: '#2e2e26'
    # blue -
    background: '#14292e'
    # also includes client side decoration titlebar
    # (a little more grey for csd titlebar)
    #foreground: '#8a8a8a'
    foreground: '#c5c5c5'
    #foreground: '#ffd1b7'

    dim_foreground: '#828482'
    bright_foreground: '#eaeaea'

  normal:
    black:    '#000000'
    red:      '#b22222'
    green:    '#29cb00'
    yellow:   '#999900'
    blue:     '#0066ff'
    magenta:  '#ba55d3'
    cyan:     '#009999'
    white:    '#dddddd'
    #white:    '#c7c7c7'

  bright:
    black:    '#808080'
    red:      '#df0000'
    green:    '#00d700'
    yellow:   '#ffd700'
    blue:     '#5f87ff'
    magenta:  '#875faf'
    cyan:     '#00ffff'
    white:    '#ffffff'

  cursor:
    cursor:   '#d78700'
    text:     '#111111'

  # these are supposed to be the wayland client-side decoration colors
  footer:
    bar:
      background: '#000000'
      foreground: '#000000'

draw_bold_text_with_bright_colors: true

bell:
  duration: 0

cursor:
  style:
    #   - ▇ Block
    #   - _ Underline
    #   - | Beam
    shape: Block
    blinking: Always

  blink_interval: 700

debug:
  # Should display the render timer
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: Info

