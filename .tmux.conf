#
# byobu w/tmux 2.4+ tmux.conf config
#
set -g default-terminal "xterm-256color"
set -g default-command "/usr/bin/zsh"
set -g status-bg colour8
set-window-option -g mode-keys vi
set -g mouse off
set -g base-index 1
setw -g pane-base-index 1

# message display time (ms)
set -g display-time 543

# move around panes
bind-key -n C-right next
bind-key -n C-left prev

# Enter copy-mode 'prefix-[' ...
# when entering copy-mode, clear primary clipboard
# so mouse paste from window mgr does send any data
bind-key [ run "xclip </dev/null -sel p >/dev/null ; tmux copy-mode"
# also add C-[ as that is easily pressed
bind-key C-[ run "xclip </dev/null -sel p >/dev/null ; tmux copy-mode"
# ']' was originally set to paste-buffer
# but its nice to also go into copy-mode
bind-key ] run "xclip </dev/null -sel p >/dev/null ; tmux copy-mode"
# also add C-] as that is easily pressed
bind-key C-] run "xclip </dev/null -sel p >/dev/null ; tmux copy-mode"
# rebind paste-buffer to prefix '=' and cancel copy-mode on paste
bind-key = \
	if-shell -Ft= "#{pane_in_mode}" \
		"paste-buffer ; send -X cancel" \
		"paste-buffer"
# could we also copy selection to the primary clipboard ?

# vim-like mappings for copy-mode cut/paste ...
bind-key -T copy-mode-vi C-j send-keys -X scroll-down
bind-key -T copy-mode-vi C-k send-keys -X scroll-up
bind-key -T copy-mode-vi C-a send-keys -X start-of-line
bind-key -T copy-mode-vi C-e send-keys -X end-of-line

# only real difference is C-v starts a new selection here but toggles in vim
# V for line selection
# C-v for rect selection from current col
#bind-key -T copy-mode-vi C-v send-keys -X begin-selection \; send-keys -X rectangle-toggle
# seems a little better ...
bind-key -T copy-mode-vi v   send-keys -X begin-selection
bind-key -T copy-mode-vi V   send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# disable previous Space to begin-selection
unbind-key -T copy-mode-vi Space
# Space to clear selection
bind-key   -T copy-mode-vi Space send-keys -X clear-selection
# Esc to quit copy-mode (as in vi)
bind-key   -T copy-mode-vi Escape send-keys -X cancel

# yank to clipboard ...
#
# no longer need tmux-yank plugin
# https://github.com/tmux-plugins/tmux-yank.git
#set -g @copy_mode_yank "C-c"
#set -g @shell_mode "vi"
#run-shell ~/.byobu/tmux-yank/yank.tmux
#
# simple method that seems to work in v2.4+
# also clear primary clipboard so mouse paste from window mgr does send any data
bind-key -T copy-mode-vi C-c send-keys -X copy-pipe "xclip </dev/null -sel p >/dev/null ; xclip -sel c >/dev/null" \; display-message "copied to clipboard"
# also map 'y' to match vim yank
bind-key -T copy-mode-vi y send-keys C-c
# NOTE: instead of clearing primary, could also copy to primary
#       (or use external program like parcellite/ClipIt to keep primary/clipboard in sync)

# explicit copy to primary (and clipboard)
bind-key -T copy-mode-vi C-r send-keys -X copy-pipe "xclip -sel c >/dev/null ; xclip -o -sel c | xclip -sel p >/dev/null" \; display-message "copied to primary and clipboard"

# explicit clear clipboards (but not tmux buffers!)
bind-key -T copy-mode-vi C-o run "xclip </dev/null -sel c >/dev/null ; xclip </dev/null -sel p >/dev/null" \; display-message "clipboards cleared"

# ----------------------------------------------
# Wish we could use right mouse button (paste) to also
# cancel copy-mode but it is often highjacked by window manager
# (test of pasting buffer of 'q<abc...>' shows issue)
# shift + left-mouse-button to select/copy to primary
# shift + right-mouse-button to paste from primary
# But perhaps we can use C-Mouse1Up to do this (see below)
#
# IDEA: tmux mods to cmd-paste-buffer.c
#       to cancel copy-mode on paste
#
#static enum cmd_retval
#cmd_paste_buffer_exec(struct cmd *self, struct cmdq_item *item)
#{
#   ...
#   if (pb != NULL && args_has(args, 'd'))
#       paste_free(pb);
#
#   // mck - cancel copy-mode on paste ...
#   if (wp != NULL && wp->mode == &window_copy_mode)
#       window_pane_reset_mode(wp);
#   // mck
#
#   return (CMD_RETURN_NORMAL);
#}
#
# get by with C-Mouse1Up to paste and cancel copy-mode
bind -n C-MouseUp1Pane \
	if-shell -Ft= "#{pane_in_mode}" \
		"paste-buffer ; send -X cancel" \
		"paste-buffer"
# could we also copy selection to the primary clipboard ?
# ----------------------------------------------

# Look into for terminals that support these
# Esc sequences for sending over ssh etc. ...
# could be on | external | off
set -g set-clipboard off

# update interval
set -g status-interval 10

# if focus events supported
set focus-events on

# default is " -_@"
set -g word-separators " :;|"

# Set window title string
#  #H  Hostname of local host
#  #I  Current window index
#  #P  Current pane index
#  #S  Session name
#  #T  Current window title
#  #W  Current window name
#  #   A literal ‘#’
set-window-option -g automatic-rename on
# sets window name to basename of dir
set-option -g automatic-rename-format '#{b:pane_current_path}'
set-option -g allow-rename on
set-option -g set-titles on
set-option -g set-titles-string "#I:#W"
# auto renumber windows on close
setw -g renumber-windows on

# remove byobu rename to "-"
bind-key -n F2 new-window -c "#{pane_current_path}"
# prefix C-c is also for new window in same dir

# Make sure to also unmap terminal (ie Terminator) 
# Ctrl-PgUp/Dn keys for these to take effect

# many [x]terminals use/map Shift-PgUp/Dn ...
#bind-key -T copy-mode-vi S-PPage halfpage-up
#bind-key -T copy-mode-vi S-NPage halfpage-down

bind-key -T copy-mode-vi C-PPage send-keys -X page-up
bind-key -T copy-mode-vi C-NPage send-keys -X page-down

# ==============================================

# mouse scroll / cut/paste options ...

set -g mouse on

#set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Dont cancel highlight when releasing button
# (only works with tmux 2.4+)
unbind -T copy-mode-vi MouseDragEnd1Pane

# ----------

# https://github.com/nhdaly/tmux-better-mouse-mode
set -g @scroll-down-exit-copy-mode "off"
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
run-shell ~/.byobu/tmux-better-mouse-mode/scroll_copy_mode.tmux

# ----------

# or method below which tries to return back to original mode
#bind -T copy-mode-vi MouseDrag1Pane setw @mode 1\; copy-mode-vi -M
#bind -T copy-mode-vi MouseDragEnd1Pane if -F '#{@mode}' 'send -X copy-selection' 'send -X copy-selection-and-cancel'
#bind -n MouseDrag1Pane if -F '#{mouse_any_flag}' 'if -F "#{pane_in_mode}" "setw -u @mode; copy-mode-vi -M" "send-keys -M"' "setw -u @mode; copy-mode-vi -M"

# ----------

# older method to toggle mouse mode
#unbind m
#bind m run "\
#    tmux show-options -g | grep 'mouse ' | grep -q on; \
#    if [ \$? = 0 ]; \
#    then  \
#        toggle=off;  \
#    else  \
#        toggle=on;  \
#    fi;  \
#    tmux display-message \"mouse is now: \$toggle\";  \
#    tmux set-option -g mouse \$toggle; \
#    "

# ==============================================

# from: https://github.com/sc0ty/config
########################
##### MOUSE CONFIG #####
########################
#
#set -gq mouse on
#
#bind-key -n WheelUpPane \
#	if-shell -Ft= "#{?pane_active,0,1}" "select-pane -t=" \; \
#	if-shell -Ft= "#{pane_in_mode}" \
#		"send-keys -M ; send-keys -M ; send-keys -M" \
#		"if-shell -Ft= \"#{mouse_any_flag}\" \
#			\"send-keys -M\" \
#			\"if-shell -Ft= '#{alternate_on}' \
#				'send-keys Up Up Up' \
#				'copy-mode -e'\""
#
#bind-key -n WheelDownPane \
#	if-shell -Ft= "#{?pane_active,0,1}" "select-pane -t=" \; \
#	if-shell -Ft= "#{pane_in_mode}" \
#		"send-keys -M ; send-keys -M ; send-keys -M" \
#		"if-shell -Ft= \"#{mouse_any_flag}\" \
#			\"send-keys -M\" \
#			\"if-shell -Ft= '#{alternate_on}' \
#				'send-keys Down Down Down'\""
#
#bind-key -n MouseDrag1Pane \
#	if-shell -Ft= "#{mouse_any_flag}" \
#		"if-shell -Ft= '#{pane_in_mode}' 'copy-mode -eM' 'send-keys -M'" \
#		"copy-mode -eM"
#
#
## paste with middle click
#bind-key -n MouseDown2Pane run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
#
## double click to select word in normal mode if mouse is not handled
#bind-key -n DoubleClick1Pane \
#	if-shell -Ft= "#{mouse_any_flag}" \
#		"send-keys -M" \
#		"select-pane \; copy-mode -e \; send-keys -X select-word"
#
## triple click to select line in normal mode if mouse is not handled
#bind-key -n TripleClick1Pane \
#	if-shell -Ft= "#{mouse_any_flag}" \
#		"send-keys -M" \
#		"select-pane \; copy-mode -e \; send-keys -X select-line"
#
## drag & drop windows on status line by mouse
#bind-key -n MouseDrag1Status swap-window -t=
#
## new window by right click on status line
#bind-key -n MouseDown3Status new-window -a -t= -c '#{pane_current_path}'
#
## new window in background by middle click on status line
#bind-key -n MouseDown2Status new-window -ad -t= -c '#{pane_current_path}'
#
## don't scroll to bottom after mouse select
## workaround for selection being unselected on DragEnd
##bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xsel -ip"
#
## deselect with mouse click
#bind-key -T copy-mode-vi MouseDown1Pane select-pane \; send-keys -X clear-selection
#
# exit from copy-mode with right-click
#unbind-key -n MouseDown3Pane
#bind-key -T copy-mode-vi MouseDown3Pane select-pane \; send-keys -X cancel
#
# ==============================================

bind -T copy-mode-vi MouseDown1Pane \
	if-shell -Ft= "#{pane_in_mode}" \
		"send -X clear-selection ; select-pane" \
		"select-pane"

bind -T copy-mode-vi MouseDrag1Pane \
	if-shell -Ft= "#{pane_in_mode}" \
		"send -X clear-selection ; select-pane ; send -X begin-selection" \
		"select-pane ; send -X begin-selection"

# default select-word does not work well
bind -T copy-mode-vi DoubleClick1Pane \
    select-pane \; run "tmux send -X clear-selection ; tmux send bvE ; tmux send -X copy-pipe \"xclip </dev/null -sel p >/dev/null ; xclip -sel c >/dev/null\" ; sleep 0.1 ; tmux display-message \"copied to clipboard\""
# enter copy-mode and copy
bind -T root         DoubleClick1Pane \
 	if-shell -Ft= "#{mouse_any_flag}" \
 		"send-keys -M" \
        "select-pane \; copy-mode -M \; run \"tmux send -X clear-selection ; tmux send bvE ; tmux send -X copy-pipe \"xclip </dev/null -sel p >/dev/null ; xclip -sel c >/dev/null\" ; sleep 0.1 ; tmux display-message \"copied to clipboard\"\""

# default select-line does not work well
bind -T copy-mode-vi TripleClick1Pane \
    select-pane \; run "tmux send -X clear-selection ; tmux send 0v\\\$ ; tmux send -X copy-pipe \"xclip </dev/null -sel p >/dev/null ; xclip -sel c >/dev/null\" ; sleep 0.1 ; tmux display-message \"copied to clipboard\""

# enter copy-mode and copy
bind -T root         TripleClick1Pane \
 	if-shell -Ft= "#{mouse_any_flag}" \
 		"send-keys -M" \
        "select-pane \; copy-mode -M \; run \"tmux send -X clear-selection ; tmux send 0v\\\$ ; tmux send -X copy-pipe \"xclip </dev/null -sel p >/dev/null ; xclip -sel c >/dev/null\" ; sleep 0.1 ; tmux display-message \"copied to clipboard\"\""

bind -T copy-mode-vi WheelUpPane \
    select-pane \; send -X stop-selection \; send-keys -X -N 5 scroll-up

# use plugin above for now as that works with other programs better

# mouse wheel enters copy-mode and clears primary clipboard
#bind -T root         WheelUpPane \
#	if-shell -Ft= "#{?pane_active,0,1}" "select-pane -t=" \; \
#       "run \"xclip </dev/null -sel p >/dev/null\" ; \
#		if-shell -Ft= \"#{mouse_any_flag}\" \
#			\"send-keys -M\" \
#			\"if-shell -Ft= '#{alternate_on}' \
#				'send-keys Up Up Up' \
#				'copy-mode'\""

bind -T copy-mode-vi WheelDownPane \
    select-pane \; send -X stop-selection \; send-keys -X -N 5 scroll-down

#bind -T root         WheelDownPane \
#	if-shell -Ft= "#{?pane_active,0,1}" "select-pane -t=" \; \
#       "run \"xclip </dev/null -sel p >/dev/null\" ; \
#		if-shell -Ft= \"#{mouse_any_flag}\" \
#			\"send-keys -M\" \
#			\"if-shell -Ft= '#{alternate_on}' \
#				'send-keys Down Down Down' \
#				'copy-mode'\""

# ==============================================

