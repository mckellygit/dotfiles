#
# tig rc file
#
set focus-child        = yes
set vertical-split     = no
set split-view-height  = 75%
set split-view-width   = 62%
set horizontal-scroll  = 33%
set history-size       = 0
set mouse              = yes
set mouse-scroll       = 10
set mouse-wheel-cursor = no
set ignore-case        = true
#set line-graphics      = utf-8
set refresh-mode       = auto # auto or after-command or periodic + refresh-interval
set refresh-interval   = 5

# =================================================

bind generic   <C-L>        refresh # instead of redraw-screen

bind generic   <Down>       move-down
bind generic   <Up>         move-up
#
bind generic   g            none
bind generic   gp           view-grep
bind generic   gg           move-first-line
bind generic   G            move-last-line
bind main      G            move-last-line
#bind generic   <Esc>g       move-first-line
#bind generic   <Esc>G       move-last-line

# override page content view
bind generic   p            none

bind generic   u            none
#
# Leader mappings ...
# use 2-key mapping as single \f,F and c,C cause input delays in vim ...
bind generic   \            none
bind diff      \;f          :/^diff --git
bind diff      \;F          :?^diff --git
bind diff      \;c          :/^@@
bind diff      \;C          :?^@@
bind stage     \;f          :/^diff --git
bind stage     \;F          :?^diff --git
bind stage     \;c          :/^@@
bind stage     \;C          :?^@@
#
#bind generic   \d           scroll-page-down
#bind generic   \u           scroll-page-up
#
# match vim fugitive git mappings ...
bind diff      <Ctrl-N>     :/^diff --git|^@@
bind diff      <Ctrl-P>     :?^diff --git|^@@
bind stage     <Ctrl-N>     :/^diff --git|^@@
bind stage     <Ctrl-P>     :?^diff --git|^@@
#
bind generic   <Ctrl-_><Space>      move-down
bind generic   <Ctrl-_><Backspace>  move-up
bind diff      <Ctrl-_><Space>      scroll-page-down
bind stage     <Ctrl-_><Space>      scroll-page-down
bind diff      <Ctrl-_><Backspace>  scroll-page-up
bind stage     <Ctrl-_><Backspace>  scroll-page-up
#
bind generic   \1           move-half-page-down
bind generic   \`           move-half-page-up
#
bind generic   Q            none
bind generic   q            none
bind generic   qq           view-close
bind generic   \qq          view-close
bind generic   QQ           quit
bind generic   <C-q><C-q>   quit
bind generic   \xc          quit
#
bind generic   <Ctrl-D>     scroll-page-down
bind generic   <Ctrl-U>     scroll-page-up
#
bind generic   <Ctrl-F>     move-half-page-down
bind generic   <Ctrl-B>     move-half-page-up
#
bind generic   <PageDown>   move-page-down
bind generic   <PageUp>     move-page-up
#
bind generic   <Ctrl-J>     scroll-line-down
bind generic   <Ctrl-K>     scroll-line-up
#
bind generic   <Esc>j       move-down
bind generic   <Esc>k       move-up
bind generic   <Esc>J       none
bind generic   <Esc>K       none
bind generic   <Ctrl-_>j    scroll-line-down
bind generic   <Ctrl-_>k    scroll-line-up
# use ^O instead of ^J (or ^M or \n or \r)
bind generic   <Esc><Ctrl-O>    scroll-line-down
bind generic   <Esc><Ctrl-K>    scroll-line-up
#
bind generic   <Esc><Enter>    scroll-line-up
bind generic   <Ctrl-^><Enter> scroll-line-up
#
bind generic   <Ctrl-^><Space> scroll-page-down
bind generic   <Ctrl-^><C-H>   scroll-page-up

bind generic   <Esc><Esc>        view-close-no-quit
#
bind generic   <Esc><Space>      scroll-line-down
bind generic   <Esc><BackSpace>  scroll-line-up
#
bind generic   <Ctrl-w>w          view-next
bind generic   <Ctrl-w><Ctrl-w>   view-next
#
bind main      <Space>              next
bind generic   <Space>              scroll-page-down
bind generic   <Ctrl-@>             move-down
# vim terminal BUG - send M-- instead of C-@ (C-Space) - may be fixed now with tnoremap
bind generic   <Esc>-               move-down
bind main      <Backspace>          previous
bind generic   <Backspace>          scroll-page-up
bind generic   <Ctrl-^><Backspace>  move-up
#
bind generic   <Tab>        next
bind generic   <ShiftTab>   previous
#
bind generic   <Esc>[1;5B   scroll-line-down
bind generic   <Esc>[1;5A   scroll-line-up
bind generic   <Esc>[1;3B   scroll-line-down
bind generic   <Esc>[1;3A   scroll-line-up
#
bind generic   <Esc>[1;5D   scroll-left
bind generic   <Esc>[1;5C   scroll-right
bind generic   <Esc>[1;3D   scroll-left
bind generic   <Esc>[1;3C   scroll-right
#
bind generic   <Esc>[1;5H   move-first-line
bind generic   <Esc>[1;5F   move-last-line
bind generic   <Esc>[1;7H   move-first-line
bind generic   <Esc>[1;7F   move-last-line
#
# extended ncurses codes and keynames
#bind generic   <Ctrl-Down>  scroll-line-down
#bind generic   <Ctrl-Up>    scroll-line-up
#bind generic   <Alt-Down>   scroll-line-down
#bind generic   <Alt-Up>     scroll-line-up
#
#bind generic   <C-Left>     scroll-left
#bind generic   <C-Right>    scroll-right
#bind generic   <A-Left>     scroll-left
#bind generic   <A-Right>    scroll-right
#
#bind generic   <C-Home>     move-first-line
#bind generic   <C-End>      move-last-line
#bind generic   <A-C-Home>   move-first-line
#bind generic   <A-C-End>    move-last-line
#
bind generic   <Insert>     none
bind generic   <Delete>     none
bind generic   <Home>       none
bind generic   <End>        none
#
# <ScrollFwd> == <S-Down>
bind generic   <ScrollFwd>  next
# <ScrollBack> == <S-Up>
bind generic   <ScrollBack> previous
bind main      <ShiftLeft>  scroll-left
bind main      <ShiftRight> scroll-right

bind generic   +            @sh -c "echo -n %(commit) | myclip"

#bind generic   |            scroll-first-col
bind generic   |            none

#bind generic   -            move-page-up
bind generic   -            none

# =================================================

bind refs    Pp   @tmux_popup_wrapper git push
bind refs    Pb   @tmux_popup_wrapper git push -u %(remote) %(branch):'%(prompt Which branch? )'
bind refs    Pf   @tmux_popup_wrapper git push origin +%(branch)
bind refs    PF   @tmux_popup_wrapper git push --force
#
bind refs    gf   @tmux_popup_wrapper git fetch %(remote) %(ref)
bind refs    pr   @tmux_popup_wrapper git push '%(prompt Push to which remote? )' %(ref):%(ref)
bind refs    pd   @tmux_popup_wrapper git push %(remote) :%(ref)
bind refs    pD   @tmux_popup_wrapper git push '%(prompt Delete from which remote? )' :%(ref)
bind refs    rd   @tmux_popup_wrapper git branch --remotes -D %(remote)/%(ref)

bind refs    Cr   @tmux_popup_wrapper git checkout %(ref)

#bind refs    C    ?git checkout %(branch)
#bind refs    !    ?git branch -D %(branch)
bind refs    C    none
bind refs    !    none
bind refs    Cb   @tmux_popup_wrapper git checkout %(branch)  # C
bind refs    B!   @tmux_popup_wrapper git branch -D %(branch) # !

#bind main    C    ?git cherry-pick %(commit)
bind main    C    none
bind main    Cp   @tmux_popup_wrapper git cherry-pick %(commit) # C

#bind status  C    !git commit
#bind status  M    status-merge        # Open git-mergetool(1)
#bind status  u    status-update        # Stage/unstage changes in file
#bind status  !    status-revert        # Revert changes in file
bind status  C    none
bind status  M    none
bind status  !    none
bind status  Cc   @tmux_popup_wrapper --tty git commit # C
bind status  Sm   status-merge                         # M - Open git-mergetool(1)
bind status  R!   status-revert        # Revert changes in file
# also allow push from status-view ...
bind status  Pp   @tmux_popup_wrapper git push
bind status  Pb   @tmux_popup_wrapper git push -u %(remote) %(branch):'%(prompt Which branch? )'
bind status  Pf   @tmux_popup_wrapper git push origin +%(branch)
bind status  PF   @tmux_popup_wrapper git push --force

#bind stash   A    ?git stash apply %(stash)
#bind stash   P    ?git stash pop %(stash)
#bind stash   !    ?git stash drop %(stash)
bind stash   A    none
bind stash   P    none
bind stash   !    none
bind stash   Sa   @tmux_popup_wrapper git stash apply %(stash) # A
bind stash   Sp   @tmux_popup_wrapper git stash pop %(stash)   # P
bind stash   S!   @tmux_popup_wrapper git stash drop %(stash)  # !

#bind stage   u    status-update        # Stage/unstage current diff (c)hunk
#bind stage   1    stage-update-line    # Stage/unstage current line
#bind stage   !    status-revert        # Revert current diff (c)hunk
#bind stage   \    stage-split-chunk    # Split current diff (c)hunk
bind stage   !    none
bind stage   R!   status-revert        # Revert current diff (c)hunk
bind stage   \    none

#bind reflog  C    ?git checkout %(branch)
#bind reflog  !    ?git reset --hard %(commit)
bind reflog  C    none
bind reflog  !    none
bind reflog  Cb   @tmux_popup_wrapper git checkout %(branch)     # C
bind reflog  R!   @tmux_popup_wrapper git reset --hard %(commit) # !

# =================================================

# colors: color0-255 or white, black, green, magenta, blue, cyan, yellow, red, default
# attributes: normal, blink, bold, dim, reverse, standout, underline
color default        white      color235   normal

color date          yellow     default
color title-blur    white      black
color title-focus   white      black      bold
#color cursor        default    color241
color cursor        color214   color241   normal
color author        color35    default
color status        color178   default

