#!/bin/bash

ask() {
    local prompt default reply

    prompt='Y/n'
    default='Y'

    while true; do

        # Ask the question (not using "read -p" as it uses stderr not stdout)
        echo -n "$@ [$prompt] "

        # Read the answer (use /dev/tty in case stdin is redirected from somewhere else)
        read -r reply </dev/tty

        # Default?
        if [[ -z $reply ]]; then
            reply=$default
        fi

        # Check if the reply is valid
        case "$reply" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac

    done
}

dontask=0
usetty=0

if [[ $# -lt 1 ]] ; then
    cmd=$SHELL
else
    if [[ "$1" == "--da" ]] ; then
        shift
        dontask=1
    elif [[ "$1" == "--tty" ]] ; then
        shift
        usetty=1
    fi

    if [[ $# -lt 1 ]] ; then
        cmd=$SHELL
    else
        if [[ $dontask -eq 0 ]] ; then
            if [[ "$1" == "--da" ]] ; then
                shift
                dontask=1
            fi
        fi
        if [[ $usetty -eq 0 ]] ; then
            if [[ "$1" == "--tty" ]] ; then
                shift
                usetty=1
            fi
        fi
    fi

    if [[ $# -lt 1 ]] ; then
        cmd=$SHELL
    else
        cmd="$@"
    fi
fi

if [[ $dontask -eq 1 ]] ; then
    if [[ $usetty -eq 1 ]] ; then
        exec "$cmd"
    else
        # could add -e less opt to quit if <CR> at end ...
        $cmd |& /bin/less -R
        exit $?
    fi
fi

if ask "Run $cmd ?" ; then
    if [[ $usetty -eq 1 ]] ; then
        exec "$cmd"
    else
        # could add -e less opt to quit if <CR> at end ...
        $cmd |& /bin/less -R
        exit $?
    fi
else
    exit 1
fi

