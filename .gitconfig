[core]
	autocrlf = input
	whitespace = trailing-space,tab-in-indent,tabwidth=4
#	tab-in-indent makes leading tabs bright red ...
#	whitespace = trailing-space,tabwidth=4
	editor = nvim
	excludesfile = ~/.gitignore
    preloadindex = true
[apply]
	whitespace = error
# [credential "https://url_without_scheme"]
[credential]
	helper = /usr/share/doc/git/contrib/credential/libsecret/git-credential-libsecret
[checkout]
    defaultRemote = upstream
[color]
    ui = on
[color "status"]
    added = 2
    changed = 160
    untracked = 5
    deleted = 1
[color "diff"]
#	old = red
	old = 208
#	new = green
	new = 142
#	meta = cyan
	meta = 38 bold
#	frag = yellow
	frag = 185 bold
	commit = blue
    hunk = magenta
    context = 249
[pager]
    diff = less -F -iR -K -x4 -~
[alias]
    undo = "!f() { git reset --hard $(git rev-parse --abbrev-ref HEAD)@{${1-1}}; }; f"
    dt = difftool
    dv = difftool
    dd = ddelta
    delta = ddelta
    vdiff = difftool
    nvdiff = difftool
    vvdiff = difftool --tool=vimgitdiff
    dtastic = difft
    difff = dless
    olddiff = diff
    oldiff = diff
    dif = dless
    dles = dless
#	git diff does not use alternate screen, no matter what PAGER, GIT_PAGER, etc. are
#	dless is a git-dless cmd
	last = log -l HEAD
	unstage = reset HEAD --
	visual = !gitk
    merge-s = !git merge --signoff
    merge-signed = !git merge --signoff
    pull-s = !git pull --signoff
    pull-signed = !git pull --signoff
    br-name = "!git rev-parse --abbrev-ref HEAD"
    for = fetch origin
    fup = fetch upstream
    f-all = fetch --all
    ff-ups-mrg = "!f() { git merge --signoff --ff-only "upstream/$(git br-name)"; }; f"
    ff-org-mrg = "!f() { git merge --signoff --ff-only "origin/$(git br-name)"; }; f"

#   del-loc-br = "!f() { git branch -D "$@"; }; f"
#   del-loc-br = "!f() { git branch -D "$(git branch -a --sort=-committerdate | grep -v 'remotes/' | fzf-tmux -r | awk '{print $NF}')"; }; f"
    del-loc-br = "!f() { git_del_loc_branch $@; }; f"

#   del-rem-br = "!f() { git push origin --delete "$@"; }; f"
#   del-rem-br = "!f() { git push origin --delete "$(git branch -a --sort=-committerdate | grep 'remotes/origin/' | fzf-tmux -r | awk '{print $NF}' | awk -F/ '{print $NF}')"; }; f"
    del-rem-br = "!f() { git_del_rem_branch $@; }; f"

#   del-all-br = "!f() { git push origin --delete "$@"; git branch -D "$@"; }; f"
    del-all-br = "!f() { git_del_all_branch $@; }; f"

    prune-rem-org = "!git remote prune origin"
    alias = "!git config --get-regexp ^alias. | sed 's/^alias.//'"
    stat = !git status
    st = !git status
    stx = !git status -u no
    stnu = !git status -u no
    smu = !git submodule update --init --recursive
#   parent = "!f() { c=$(git log --first-parent | grep commit | head -n 2 | tail -n 1 | awk '{print $2}'); git branch --contains $c; }; f"
    parent = !git log --first-parent --graph
    whoami = "! git var -l | grep '^GIT_.*_IDENT'"
    set-ident = "! git config user.name \"$(git config user.$1.name)\"; git config user.email \"$(git config user.$1.email)\"; :"
#   ls = whatchanged
#   git show - to describe last commit ...
#   ls-changes = !git diff HEAD~1 --name-only
#   cout = "!f() { git checkout "$(git branch -a --sort=-committerdate | fzf-tmux -p -w 80% -h 60% | sed 's/^\\*//' | tr -d '[:space:]')"; }; f"
#   cout = "!f() { git checkout "$(git branch -a --sort=-committerdate | fzf-tmux -r | awk '{print $NF}')"; }; f"
#   these are scripts now ...
#   cout = "!f() { br="$(git branch -a --sort=-committerdate | fzf-tmux -d 22 | awk '{print $NF}')"; if [ -z \"$br\" ] ; then exit ; fi ; stty -echo ; tmux send "git\\ checkout\\ $br" ; stty echo ; }; f"
#   chko = "!f() { br="$(git branch -a --sort=-committerdate | fzf-tmux -d 22 | awk '{print $NF}')"; if [ -z \"$br\" ] ; then exit ; fi ; stty -echo ; tmux send "git\\ checkout\\ $br" ; stty echo ; }; f"
[diff]
	colormoved = "default"
	colormovedws = "allow-indentation-change"
	algorithm = histogram
#	compactionHeuristic = true
    tool = nvimgitdiff
[difftool "vimgitdiff"]
    cmd = vimdiff "$LOCAL" "$REMOTE"
[difftool "nvimgitdiff"]
    cmd = nvimdiff "$LOCAL" "$REMOTE"
[difftool]
	prompt = false
	trustExitCode = true
[mergetool]
    trustExitCode = true
[delta]
    navigate = true  # use n and N to move between diff sections
[fetch]
	prune = true
[pull]
    rebase = false
[user]
    useConfigOnly = true
[merge]
	conflictstyle = diff3
[user "ident1"]
    name = My Name1
    email = my email address1
[user "ident2"]
    name = My Name2
    email = my email address2
[stash]
    showIncludeUntracked = true
